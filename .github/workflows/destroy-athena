name: Destroy Athena CDK

on:
  workflow_dispatch:
    inputs:
      tenant:
        description: "Tenant name (must exist in config.yaml)"
        required: true
        type: string
      env:
        description: "Environment (e.g., dev, prod)"
        required: true
        type: string

jobs:
  destroy-athena:
    runs-on: ubuntu-latest
    env:
      WORKING_DIR: athena
      PYTHON_VERSION: 3.11

    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Python dependencies
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyyaml

      # ✅ Validate tenant/env exist
      - name: Validate config.yaml
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          python - <<EOF
          import yaml, sys
          tenant = "${{ github.event.inputs.tenant }}"
          env = "${{ github.event.inputs.env }}"
          with open("config.yaml") as f:
              config = yaml.safe_load(f)
          if tenant not in config:
              sys.exit(f"❌ Tenant '{tenant}' not found in config.yaml")
          if env not in config[tenant]:
              sys.exit(f"❌ Env '{env}' not found under tenant '{tenant}' in config.yaml")
          print(f"✅ Tenant '{tenant}', Env '{env}' validated in config.yaml")
          EOF

      - name: Install CDK CLI
        run: npm install -g aws-cdk@latest

      # 👇 Configure AWS creds
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # 🚀 Destroy
      - name: CDK Destroy
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          cdk destroy \
          -c tenant=${{ github.event.inputs.tenant }} \
          -c env=${{ github.event.inputs.env }} \
          --force
